spring:
  data:
    redis:
      host: localhost
      port: 6379
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:testdb
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true  # SQL 쿼리를 포맷하여 가독성을 높입니다.
        highlight_sql: true # SQL 쿼리에서 중요한 부분을 강조합니다.
        color-codes: true  # SQL 쿼리의 컬러 코드를 사용합니다.
        use_sql_comments: true # SQL 쿼리에 주석을 추가합니다.
    defer-datasource-initialization: true # 데이터 소스 초기화를 지연시킵니다.
  #    open-in-view: false # (주석 처리됨) Open EntityManager in View 패턴을 비활성화합니다.
  mail:
    host: smtp.gmail.com
    port: 587
    username: pyyeon98@gmail.com
    password: cslwsjknqbiowigm
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          ssl:
            trust: smtp.gmail.com
    subject:
      member:
        registration: Thank you for joining our cafe!
    template:
      name:
        member:
          join: email-registration-member
  output:
    ansi:
      enabled: ALWAYS    # 콘솔 출력에서 ANSI 색상을 항상 활성화합니다.
logging:
  level:
    org:
      hibernate:
        SQL: error       # Hibernate SQL 로그 레벨을 에러로 설정합니다.
        type:
          descriptor:
            sql:
              BasicBinder: trace # SQL 바인딩 로그를 추적 레벨로 설정합니다.
      springframework:    #트랜잭션사용시
        orm:
          jpa: DEBUG
server:
  port: 8080
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: admin@gmail.com
jwt:
  key: awedgyujilzsdxfcgjmklwqaertfyuhijojfghjgfcdxcgbhjkhgfdef
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420